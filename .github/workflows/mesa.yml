name: Build Android
on:
  [push, pull_request, workflow_dispatch]
jobs:
  build:
    strategy:
      matrix:
        arch: ["aarch64"]
      fail-fast: false
    name: "Build for ${{matrix.arch}}"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu bionic main universe multiverse"
          sudo apt update
          echo -e "Package: *\nPin: release a=bionic\nPin-Priority: 1001" | sudo tee /etc/apt/preferences.d/bionic
          sudo apt install -y glslang-tools golang-lukechampine-blake3-dev librust-blake3-dev b3sum \
                              libxrandr-dev libxxf86vm-dev libxcb-*-dev libx11-xcb-dev libxfixes-dev \
                              libdrm-dev libx11-dev python3-mako ninja-build meson
      - name: Set up Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r20-linux-x86_64.zip
          unzip android-ndk-r20-linux-x86_64.zip
          export ANDROID_NDK_HOME=$PWD/android-ndk-r20
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
      - name: Clone Mesa Repository
        run: |
          git clone --single-branch --branch winsys-meson https://gitlab.freedesktop.org/lyudess/panfrost-mesa mesa
          cp android-* mesa/
          cd mesa
      - name: Configure and Build Mesa
        run: |
          envsubst <android-${{matrix.arch}} >build-crossfile
          meson setup "build-android" \
            --prefix=/tmp/pan \
            --cross-file "build-crossfile" \
            -Dplatforms=x11 \
            -Dllvm=disabled \
            -Dvulkan-drivers= \
            -Dgallium-drivers=panfrost,swrast \
            -Dbuildtype=release
          ninja -C "build-android" install
      - name: Upload Libraries
        uses: actions/upload-artifact@v4
        with:
          name: panfrost_${{matrix.arch}}
          path: /tmp/pan
